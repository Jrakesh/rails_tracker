= Active Progress
Active Progress is a Ruby on Rails engine that creates a simple Web UI for your users
to track development progress through Github Issues.

![ScreenShot](https://raw.github.com/mcifani/active_progress/master/screenshot1.png)

== Current Requirements(important)
Active Progress currently requires Active Record and will only work on applications which use Devise
as their user authentication system. Active Progress utitlizes various Devise helpers to faciliate
the interactions for your users to track development tickets & issues.

== Getting Started
Add Active Progress as a Ruby Gem.

    gem 'active_progress'

After you install Active Progress and add it to your Gemfile, you need to run the generator:

    rails generate active_progress:install

The generator will install an initializer which describes ALL Active Progress's configuration options and you MUST take a look at it.

Copy the migrations which will create tables to store issue/user associations.  Make sure to run your migrations after.

    rake tracker:install:migrations

You will need to mount the engine and set the namespace you want to your routes.rb.

    mount Tracker::Engine => "/tracker"

"/tracker" can be anything you like. This is where you can now direct users to track your Github issues.

You will need to extend Active Progress in your particular User Model. You need to do this by including the module
directly in your User Model class.

    class User < ActiveRecord::Base
      include Tracker
      # The rest of your User Model
    end

== Set your GitHub Repo to handle closed issues

These next steps will help incorporate your repo hooks and configure the hook to trigger on issues.

Github webhooks for a URL by default only fire on repo pushes.  There is currently no way in the web UI to set up webhooks for other events.
You must set your repo to the issue event via the API directly. Follow this example to create a new hook and set the event support with issues

Make sure to pass this URL when you are creating the hook. By default Active Progress uses the listen namespace to respond to post updates sent from github.
Be sure to name the new hook "web".

    curl -u 'username' -v -H "Content-Type: application/json" \
    -X POST -d '{"name": "web", "active": true, "events": ["issues"], \
    "config": {"url": "example.com/tracker/listen", "content_type": "json"}}' \
    https://api.github.com/repos/:username/:repo/hooks

    example.com/tracker/listen


== Under the hood
Coming soon.

== License
This project rocks and uses MIT-LICENSE.
